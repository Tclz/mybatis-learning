<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--配置roperties
        可以在标签内部配置数据库连接信息。也可以通过属性引用外部配置文件信息
        resource属性： 较常用
                用于指定配置文件的位置。按照类路径的方式来写，必须存在于类路径下
        url属性：  要求按照Url的写法来写地址 URL:统一资源定位符。唯一标识一个资源的位置。
                协议 主机 端口 URI
                http://localhost:8080/mybatis/demo
                URI： Uniform Resource Identifier 统一资源标识符 。在应用中唯一定位一个资源。-->
    <properties resource="jdbcConfig.properties"></properties>
    <!--使用typeAliases配置别名。它只能配置domain类中的别名。-->
    <typeAliases>
        <!-- type属性指定的是实体类全限定类名。alias属性指定别名，指定别名之后就不再区分大小写-->
        <typeAlias type="com.domain.Person" alias="person"></typeAlias>
        <!-- package用于指定要配置别名的包。当指定之后，该包下的实体类都会注册别名，并且类名就是别名。不再区分大小写-->
        <package name="com.domain"/>
    </typeAliases>
    <!-- 配置环境-->
    <environments default="mysql">
        <environment id="mysql">
            <!-- 配置事务类型-->
            <transactionManager type="JDBC"></transactionManager>
            <!--配置数据源（连接池）
                type属性的取值：
                        POOLED：采用传统的javax.sql.DataSource规范中的连接池，mybatis中有针对规范的实现
                        UNPOOLED:采用传统的连接方式，虽然也实现了javax.sql.DataSource接口，但没有使用池的思想
                        JNDI：采用服务器提供的JNDI技术，来获取DataSource对象，不同的服务器所能拿到的DataSource不一样
                                注意：如果不是web或maven的war工程，是不能使用的。
                        -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 配置映射文件-->
    <mappers>
        <!--使用XML方式-->
        <mapper resource="com/dao/IPersonDao.xml"></mapper>
        <!--使用注解的方式-->
        <!--<mapper class="com.dao.IPersonDao"></mapper>-->
    </mappers>
</configuration>